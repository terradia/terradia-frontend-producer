# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type Category {
    id: String!
    name: String!
    parentCategoryId: String
    products: [Product]
}

type Company {
    cover: String
    createdAt: Date
    description: String
    email: String
    id: ID!
    logo: String
    name: String!
    phone: String
    products: [Product]
    updatedAt: Date
    users: [User]
}

type Mutation {
    _: Boolean
    addCategoryToProduct(categoryName: String!, productId: String!): Product!
    createCategory(name: String!, parentCategoryId: String): Category!
    createCompany(description: String, email: String, name: String!, phone: String): Company!
    createProduct(description: String!, name: String!): Product!
    deleteCategory(id: String!): Category!
    deleteCompany(id: ID!): Company
    joinCompany(id: ID!): Company
    leaveCompany(id: ID!): Company
    login(email: String!, password: String!): SigninAnswer!
    register(email: String!, firstName: String!, lastName: String!, password: String!, phone: String): SignupAnswer!
    updateCompany(description: String, email: String, id: ID!, name: String, phone: String): Company
}

type Product {
    categories: [Category]
    company: Company
    createdAt: Date
    description: String!
    id: ID!
    image: String
    name: String!
    updatedAt: Date
}

type Query {
    _: Boolean
    getAllCategories: [Category]!
    getAllCompanies: [Company]
    getAllProducts: [Product]!
    getCategoryByName(name: String!): Category
    getCompany(id: ID!): Company
    getCompanyByName(name: String!): Company
    getProduct(id: ID!): Product!
    getUser: User
}

type SigninAnswer {
    token: String!
    userId: String!
}

type SignupAnswer {
    message: String!
    token: String!
    userId: String!
}

type Subscription {
    _: Boolean
}

type User {
    company: Company
    email: String!
    firstName: String!
    id: ID!
    lastName: String!
    password: String!
    phone: String!
    validated: Boolean
}

enum CacheControlScope {
    PRIVATE
    PUBLIC
}


scalar Date